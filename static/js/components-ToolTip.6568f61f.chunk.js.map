{"version":3,"file":"static/js/components-ToolTip.6568f61f.chunk.js","mappings":"gTAaaA,EAAU,SAAH,GAKC,IAJnBC,EAAQ,EAARA,SACAC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACGC,GAAK,YAER,GAA8CC,EAAAA,EAAAA,UAC5C,MACD,eAFIC,EAAgB,KAAEC,EAAmB,KAG1C,GAAwCF,EAAAA,EAAAA,UAA6B,MAAK,eAArEG,EAAa,KAAEC,EAAgB,KAEpC,GAA0BJ,EAAAA,EAAAA,WAAS,GAAM,eAApCK,EAAM,KAAEC,EAAS,KAEtB,GAIIC,EAAAA,EAAAA,GAAUN,EAAkBE,EAAe,CAC7CK,UAAW,MACXC,UAAW,CACT,CACEC,KAAM,SACNC,QAAS,CACPC,OAAQ,CAAC,EAAG,SATlBC,EAAU,EAAVA,WACQC,EAAK,EAAbC,OAcIC,GAbC,EAALC,MAaW,WACXX,GAAU,EACZ,GAEMY,EAAO,WACXZ,GAAU,EACZ,EAcA,OAZAa,EAAAA,EAAAA,YAAU,WACR,GAAwB,IAApBvB,EAASwB,OAAb,CAEA,IAAIC,EAAUC,SAASC,cAAc3B,GAEhCyB,IAELA,EAAQG,aAAeR,EACvBK,EAAQI,aAAeP,EACvBhB,EAAoBmB,GARa,CASnC,GAAG,IAEEpB,GAEEyB,EAAAA,EAAAA,eACL,SAAC,IAAa,CACZC,GAAItB,EACJuB,QAAS,IACTC,WAAY,CACVC,YAAaf,EAAAA,QAAAA,MACbgB,WAAYhB,EAAAA,QAAAA,MAEdiB,eAAa,YAEb,wCACEC,IAAK7B,EACLN,UAAW,UAAGiB,EAAAA,QAAAA,UAAgB,YAAIjB,GAAa,IAAKoC,OACpDpB,OAAK,UACAA,EAAMqB,SAEPtB,EAAWsB,QACXpC,GAAK,cAET,gBAAKD,UAAWiB,EAAAA,QAAAA,KAAY,SAAElB,SAGlCI,GAxB4B,IA0BhC,C,8BCvFA,WAAgB,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,sBAAsB,MAAQ,uBAAuB,IAAM,qBAAqB,OAAS,wBAAwB,UAAY,2B","sources":["components/ToolTip/index.tsx","webpack://react-google-form/./src/components/ToolTip/ToolTip.module.scss?6a6c"],"sourcesContent":["import { ComponentProps, ReactNode, useEffect, useState } from \"react\";\nimport { usePopper } from \"react-popper\";\nimport { createPortal } from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport styles from \"./ToolTip.module.scss\";\n\ntype ToolTipProps = {\n  container?: HTMLElement;\n  selector: string;\n  children: ReactNode;\n} & ComponentProps<\"div\">;\n\nexport const ToolTip = ({\n  selector,\n  children,\n  className,\n  ...props\n}: ToolTipProps) => {\n  let [referenceElement, setReferenceElement] = useState<HTMLElement | null>(\n    null\n  );\n  let [popperElement, setPopperElement] = useState<HTMLElement | null>(null);\n\n  let [isOpen, setIsOpen] = useState(false);\n\n  const {\n    attributes,\n    styles: style,\n    state,\n  } = usePopper(referenceElement, popperElement, {\n    placement: \"top\",\n    modifiers: [\n      {\n        name: \"offset\",\n        options: {\n          offset: [0, 10],\n        },\n      },\n    ],\n  });\n\n  const show = () => {\n    setIsOpen(true);\n  };\n\n  const hide = () => {\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    if (selector.length === 0) return;\n\n    let element = document.querySelector(selector) as HTMLElement;\n\n    if (!element) return;\n\n    element.onmouseenter = show;\n    element.onmouseleave = hide;\n    setReferenceElement(element);\n  }, []);\n\n  if (!referenceElement) return null;\n\n  return createPortal(\n    <CSSTransition\n      in={isOpen}\n      timeout={300}\n      classNames={{\n        enterActive: styles.enter,\n        exitActive: styles.exit,\n      }}\n      unmountOnExit\n    >\n      <div\n        ref={setPopperElement}\n        className={`${styles.container} ${className || \"\"}`.trim()}\n        style={{\n          ...style.popper,\n        }}\n        {...attributes.popper}\n        {...props}\n      >\n        <div className={styles.menu}>{children}</div>\n      </div>\n    </CSSTransition>,\n    referenceElement\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"enter\":\"ToolTip_enter__gItR8\",\"menu\":\"ToolTip_menu__Ofi-c\",\"exit\":\"ToolTip_exit__je4bm\",\"left\":\"ToolTip_left__ucWQs\",\"right\":\"ToolTip_right__hkZme\",\"top\":\"ToolTip_top__0rfQr\",\"bottom\":\"ToolTip_bottom__+CSYI\",\"container\":\"ToolTip_container__hOGNK\"};"],"names":["ToolTip","selector","children","className","props","useState","referenceElement","setReferenceElement","popperElement","setPopperElement","isOpen","setIsOpen","usePopper","placement","modifiers","name","options","offset","attributes","style","styles","show","state","hide","useEffect","length","element","document","querySelector","onmouseenter","onmouseleave","createPortal","in","timeout","classNames","enterActive","exitActive","unmountOnExit","ref","trim","popper"],"sourceRoot":""}