{"version":3,"file":"static/js/hooks.90fe010f.chunk.js","mappings":"sTAYO,IAAMA,EAAU,WAgBrB,MAAO,CACLC,SAhBqC,SACrCC,GAEI,IAAD,yDADqD,CAAC,EAAvDC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAM3C,OAJAC,QAAQC,IAAI,CACVP,KAAAA,EACAQ,MAAO,CAAEP,UAAAA,EAAWC,UAAAA,EAAWC,QAAAA,EAASC,SAAAA,EAAUC,SAAAA,KAE7C,CACLI,IAAK,SAACC,GACJJ,QAAQC,IAAIG,EACd,EAEJ,EAKF,C","sources":["hooks/useForm.tsx"],"sourcesContent":["import { useRef } from \"react\";\nimport { FormRules } from \"types/Form\";\n\nexport type FormHook = {\n  register: (\n    name?: string | undefined,\n    rules?: FormRules\n  ) => {\n    ref: (element: HTMLElement | undefined) => void;\n  };\n};\n\nexport const useForm = (): FormHook => {\n  const register: FormHook[\"register\"] = (\n    name,\n    { maxLength, minLength, pattern, required, validate } = {}\n  ) => {\n    console.log({\n      name,\n      rules: { maxLength, minLength, pattern, required, validate },\n    });\n    return {\n      ref: (element) => {\n        console.log(element);\n      },\n    };\n  };\n\n  return {\n    register,\n  };\n};\n"],"names":["useForm","register","name","maxLength","minLength","pattern","required","validate","console","log","rules","ref","element"],"sourceRoot":""}