{"version":3,"file":"static/js/929.b8817877.chunk.js","mappings":"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","sources":["components/CheckBox/index.tsx","components/DatePicker/index.tsx","components/DropDown/index.tsx","components/FormCard/MutiOptionField/index.tsx","components/FormCard/TypeDropDown/index.tsx","components/FormCard/index.tsx","components/FormWrapper/index.tsx","components/Input/index.tsx","components/Radio/index.tsx","components/TextArea/index.tsx","components/TextEditor/index.tsx","components/ToolTip/index.tsx","helpers/index.tsx","webpack://react-google-form/./src/components/DatePicker/DatePicker.module.scss?9741","webpack://react-google-form/./src/components/DropDown/DropDown.module.scss?3f20","webpack://react-google-form/./src/components/FormCard/FormCard.module.scss?52b4","webpack://react-google-form/./src/components/FormCard/MutiOptionField/MultiOptionField.module.scss?1288","webpack://react-google-form/./src/components/FormCard/TypeDropDown/TypeDropDown.module.scss?6b26","webpack://react-google-form/./src/components/FormWrapper/FormWrapper.module.scss?bf25","webpack://react-google-form/./src/components/Input/Input.module.scss?f352","webpack://react-google-form/./src/components/TextArea/TextArea.module.scss?aa61","webpack://react-google-form/./src/components/TextEditor/TextEditor.module.scss?31d3"],"sourcesContent":["import React from \"react\";\n\nimport styles from \"./CheckBox.module.scss\";\n\ntype CheckBoxProps = {\n  onChange?: () => void;\n};\n\nexport const CheckBox = ({ onChange = () => {} }: CheckBoxProps) => {\n  return (\n    <div>\n      <span>CheckBox</span>\n    </div>\n  );\n};\n","import { ComponentProps } from \"react\";\n\nimport styles from \"./DatePicker.module.scss\";\n\ntype DatePickerProps = { disabled: boolean } & ComponentProps<\"input\">;\n\nexport const DatePicker = ({\n  placeholder = \"Enter Here\",\n  ...props\n}: DatePickerProps) => {\n  return (\n    <div className={styles.field}>\n      <input type=\"date\" placeholder={placeholder} {...props} />\n    </div>\n  );\n};\n","import {\n  ReactNode,\n  useEffect,\n  useState,\n  createContext,\n  useContext,\n  ComponentProps,\n} from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { createPortal } from \"react-dom\";\nimport { usePopper, Popper } from \"react-popper\";\nimport { clickOutside } from \"helpers\";\n\nimport styles from \"./DropDown.module.scss\";\n\ntype DropDownProps = {\n  selector: string;\n  children?: ReactNode;\n  isOpen?: boolean;\n  size?: \"auto\" | null;\n  toggle?: () => void;\n} & ComponentProps<\"div\">;\n\ntype DropDownContextType = {\n  close: () => void;\n};\n\nconst DropDownContext = createContext<DropDownContextType | null>(null);\n\nexport const DropDown = ({\n  className,\n  selector,\n  children,\n  isOpen,\n  size = null,\n  toggle = () => {},\n  ...props\n}: DropDownProps) => {\n  let [referenceElement, setReferenceElement] = useState<HTMLElement | null>(\n    null\n  );\n  let [popperElement, setPopperElement] = useState<HTMLElement | null>(null);\n\n  const {\n    attributes,\n    styles: style,\n    state,\n  } = usePopper(referenceElement, popperElement, {\n    placement: \"bottom-start\",\n    modifiers: [\n      {\n        name: \"offset\",\n        options: {\n          offset: [0, 10],\n        },\n      },\n    ],\n  });\n\n  const [show, setShow] = useState(false);\n\n  const open = () => {\n    setShow(true);\n  };\n\n  const close = () => {\n    setShow(false);\n  };\n\n  useEffect(() => {\n    if (selector.length === 0) return;\n\n    const element = document.querySelector(selector) as HTMLElement;\n\n    if (!element) return;\n\n    element.onclick = typeof isOpen === \"boolean\" ? toggle : open;\n\n    setReferenceElement(element);\n  }, []);\n\n  const onEntered = (element: HTMLElement) => {\n    if (!element) return;\n\n    clickOutside({\n      ref: element,\n      onClose: typeof isOpen === \"boolean\" ? toggle : close,\n      doNotClose: (event) => {\n        if (!referenceElement) return false;\n        return referenceElement.contains(event);\n      },\n    });\n  };\n\n  return createPortal(\n    <CSSTransition\n      in={typeof isOpen === \"boolean\" ? isOpen : show}\n      timeout={200}\n      unmountOnExit\n      classNames={{\n        enterActive: styles.enter,\n        exitActive: styles.exit,\n      }}\n      onEntered={onEntered}\n    >\n      <DropDownContext.Provider\n        value={{ close: typeof isOpen === \"boolean\" ? toggle : close }}\n      >\n        <div\n          ref={setPopperElement}\n          className={`${styles.container} ${className || \"\"}`.trim()}\n          style={{\n            ...style.popper,\n            ...(size === \"auto\" && { width: state?.rects?.reference?.width }),\n          }}\n          {...attributes.popper}\n          {...props}\n        >\n          <div className={styles.menu}>{children}</div>\n        </div>\n      </DropDownContext.Provider>\n    </CSSTransition>,\n    document.body\n  );\n};\n\ntype DropDownItemProps = {\n  children?: ReactNode;\n  onClick?: () => void;\n  className?: string;\n} & ComponentProps<\"button\">;\n\nexport const Item = ({\n  children,\n  onClick,\n  className,\n  ...props\n}: DropDownItemProps) => {\n  const { close } = useContext(DropDownContext) as DropDownContextType;\n\n  const handleClick = () => {\n    close();\n    if (typeof onClick === \"function\") onClick();\n  };\n\n  return (\n    <button\n      className={`${styles.item} ${className ? className : \"\"}`.trim()}\n      onClick={handleClick}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nDropDown.Item = Item;\n","import React, { useMemo } from \"react\";\nimport { Input } from \"components\";\nimport { FormField } from \"types/Form\";\n\nimport styles from \"./MultiOptionField.module.scss\";\n\ntype MutiOptionFieldProps = {\n  readOnly: boolean;\n} & FormField;\n\nexport const MutiOptionField = ({\n  readOnly,\n  options,\n  id,\n  type,\n  value,\n  description,\n  question,\n  other = \"\",\n  validation,\n}: MutiOptionFieldProps) => {\n  let icon = useMemo<string>(() => {\n    switch (type) {\n      case \"checkbox\":\n        return \"bx-square\";\n      case \"radio\":\n        return \"bx-circle\";\n      default:\n        return \"\";\n    }\n  }, [type]);\n\n  return (\n    <div className={styles.container}>\n      {options?.map((option, index) => {\n        return (\n          <div className={styles.option_field} key={index}>\n            {type === \"dropdown\" ? (\n              <span>{index + 1}.</span>\n            ) : (\n              <i className={icon}></i>\n            )}\n            <Input defaultValue={`Option ${index + 1}`} />\n            <i className=\"bx-x\"></i>\n          </div>\n        );\n      })}\n      {type !== \"dropdown\" && other.length !== 0 && (\n        <div className={styles.option_field}>\n          <i className={icon}></i>\n          <Input defaultValue={other} />\n          <i className=\"bx-x\"></i>\n        </div>\n      )}\n      <div className={styles.wrapper}>\n        {type === \"dropdown\" ? (\n          <span>{options && options.length + 1}.</span>\n        ) : (\n          <i className={icon}></i>\n        )}\n        <div className={styles.add_option}>\n          <div>\n            <span>Add Option</span>\n          </div>\n          {type !== \"dropdown\" && other.length === 0 && (\n            <div className={styles.other_option}>\n              <span>or </span>\n              <span>add \"Other\"</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Fragment } from \"react\";\nimport { DropDown } from \"components/DropDown\";\nimport { FormContextType, FormDropDown } from \"types/Form\";\n\nimport styles from \"./TypeDropDown.module.scss\";\n\ntype OptionsProps = {\n  id: string;\n  type: string;\n  options: FormDropDown[];\n  selectedOption: FormDropDown | undefined;\n} & Pick<FormContextType, \"handleChange\">;\n\nexport const TypeDropDown = ({\n  id,\n  options,\n  selectedOption,\n  handleChange,\n}: OptionsProps) => {\n  return (\n    <Fragment>\n      <div id={`option-${id}`} className={styles.wrapper}>\n        <div className={styles.option}>\n          <i className={selectedOption?.icon}></i>\n          <span>{selectedOption?.label}</span>\n        </div>\n        <i className=\"bxs-down-arrow\"></i>\n      </div>\n      <DropDown selector={`#option-${id}`} size=\"auto\">\n        {options.map((option) => {\n          return (\n            <DropDown.Item\n              key={`${option.label}-${id}`}\n              onClick={() => handleChange(\"type\", id, option.type)}\n            >\n              <i className={option.icon}></i>\n              <span>{option.label}</span>\n            </DropDown.Item>\n          );\n        })}\n      </DropDown>\n    </Fragment>\n  );\n};\n","import { ReactNode, useMemo } from \"react\";\nimport { TypeDropDown } from \"./TypeDropDown\";\nimport { FormDropDown, FormField, FormContextType } from \"types/Form\";\nimport {\n  TextEditor,\n  FormWrapper,\n  Input,\n  TextArea,\n  DatePicker,\n  DropDown,\n} from \"components\";\nimport { MutiOptionField } from \"./MutiOptionField\";\n\nimport styles from \"./FormCard.module.scss\";\n\ntype FormFieldProps = {\n  selectedId: string | null;\n  readOnly: boolean;\n  handleClickForm: (id: string) => void;\n} & Pick<FormContextType, \"handleChange\"> &\n  FormField;\n\nlet formDropDown: FormDropDown[] = [\n  { type: \"input\", icon: \"bx-text\", label: \"Short answer\" },\n  { type: \"textarea\", icon: \"bx-paragraph\", label: \"Paragraph\" },\n  { type: \"checkbox\", icon: \"bx-checkbox-checked\", label: \"Checkboxes\" },\n  {\n    type: \"radio\",\n    icon: \"bx-radio-circle-marked\",\n    label: \"Multiple Choices\",\n  },\n  { type: \"dropdown\", icon: \"bx-down-arrow-circle\", label: \"Dropdown\" },\n  { type: \"date\", icon: \"bx-calendar\", label: \"Date\" },\n  { type: \"file\", icon: \"bx-cloud-upload\", label: \"File Upload\" },\n];\n\nexport const FormCard = ({\n  selectedId,\n  readOnly,\n  handleClickForm,\n  handleChange,\n  ...field\n}: FormFieldProps) => {\n  let selectedOption = useMemo<FormDropDown | undefined>(() => {\n    return formDropDown.find((option) => {\n      return option.type === field.type;\n    });\n  }, [field.type]);\n\n  let component = useMemo<ReactNode>(() => {\n    switch (field.type) {\n      case \"checkbox\":\n        return <MutiOptionField readOnly={readOnly} {...field} />;\n      case \"date\":\n        return <DatePicker disabled={readOnly} />;\n      case \"dropdown\":\n        return <MutiOptionField readOnly={readOnly} {...field} />;\n      case \"file\":\n        return <Input disabled={readOnly} />;\n      case \"input\":\n        return <Input placeholder=\"Short answer text\" disabled={readOnly} />;\n      case \"textarea\":\n        return <TextArea placeholder=\"Long answer text\" disabled={readOnly} />;\n      case \"radio\":\n        return <MutiOptionField readOnly={readOnly} {...field} />;\n      default:\n        return null;\n    }\n  }, [field.type]);\n\n  return (\n    <FormWrapper\n      className={styles.card}\n      onClick={() => handleClickForm(field.id)}\n      isSelected={selectedId === field.id}\n    >\n      <div className={styles.wrapper}>\n        <TextEditor as=\"div\" placeholder=\"Question\" />\n        {selectedId === field.id && (\n          <TypeDropDown\n            id={field.id}\n            type={field.type}\n            handleChange={handleChange}\n            options={formDropDown}\n            selectedOption={selectedOption}\n          />\n        )}\n      </div>\n      <div className={styles.field} data-type={field.type}>\n        {component}\n      </div>\n      <div className={styles.footer}>\n        <i className=\"bx-trash\"></i>\n        <i className=\"bx-duplicate\"></i>\n        <div className={styles.split}></div>\n        <div>\n          <span>Required</span>\n        </div>\n        <div id={`more-options-${field.id}`} className={styles.more_options}>\n          <i className=\"bx-dots-vertical-rounded\"></i>\n        </div>\n      </div>\n      <DropDown\n        selector={`#more-options-${field.id}`}\n        className={styles.option_drop_down}\n      >\n        <DropDown.Item>Descripton</DropDown.Item>\n        <DropDown.Item>Shuffle option order</DropDown.Item>\n      </DropDown>\n    </FormWrapper>\n  );\n};\n","import { ComponentProps, ReactNode } from \"react\";\n\nimport styles from \"./FormWrapper.module.scss\";\n\ntype BoxProps = {\n  isSelected?: boolean;\n  isHeader?: boolean;\n  children: ReactNode;\n} & ComponentProps<\"div\">;\n\nexport const FormWrapper = ({\n  children,\n  isHeader = false,\n  isSelected = false,\n  className,\n  ...props\n}: BoxProps) => {\n  return (\n    <div\n      {...(isHeader && { \"aria-label\": \"header\" })}\n      className={`${styles.container} ${className || \"\"}`.trim()}\n      {...props}\n    >\n      {!isHeader && (\n        <div className={styles.drag_icon}>\n          <i className=\"bx-dots-horizontal-rounded\"></i>\n          <i className=\"bx-dots-horizontal-rounded\"></i>\n        </div>\n      )}\n      {children}\n      {isHeader && <div className={styles.indicator}></div>}\n      {isSelected && <div className={styles.highlight}></div>}\n    </div>\n  );\n};\n","import { ComponentProps, FocusEvent, useRef } from \"react\";\n\nimport styles from \"./Input.module.scss\";\n\ntype InputProps = {} & ComponentProps<\"input\">;\n\nexport const Input = ({\n  className,\n  type = \"text\",\n  placeholder = \"Enter Here\",\n  onFocus,\n  onBlur,\n  ...props\n}: InputProps) => {\n  let inputRef = useRef<HTMLInputElement>(null);\n\n  const handleFocus = (event: FocusEvent<HTMLInputElement>): void => {\n    inputRef.current?.classList.remove(styles.blur);\n    inputRef.current?.classList.add(styles.focus);\n    if (typeof onFocus === \"function\") onFocus(event);\n  };\n\n  const handleBlur = (event: FocusEvent<HTMLInputElement>): void => {\n    inputRef.current?.classList.remove(styles.focus);\n    inputRef.current?.classList.add(styles.blur);\n    if (typeof onBlur === \"function\") onBlur(event);\n  };\n\n  return (\n    <div ref={inputRef} className={styles.field}>\n      <input\n        type={type}\n        placeholder={placeholder}\n        className={`${styles.field} ${className || \"\"}`.trim()}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        {...props}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport styles from \"./Radio.module.scss\";\n\ntype RadioProps = {\n  onChange?: () => void;\n};\n\nexport const Radio = ({ onChange = () => {} }: RadioProps) => {\n  return (\n    <div>\n      <span>Radio</span>\n    </div>\n  );\n};\n","import React, { ComponentProps } from \"react\";\n\nimport styles from \"./TextArea.module.scss\";\n\ntype TextAreaProps = {} & ComponentProps<\"textarea\">;\n\nexport const TextArea = ({\n  placeholder = \"Enter Here\",\n  className,\n  ...props\n}: TextAreaProps) => {\n  return (\n    <textarea\n      placeholder={placeholder}\n      className={`${styles.field} ${className || \"\"}`.trim()}\n      {...props}\n    />\n  );\n};\n","import { FocusEvent, ElementType, useRef, ComponentProps } from \"react\";\n\nimport styles from \"./TextEditor.module.scss\";\n\ntype TextEditorOwnProps<E extends ElementType> = {\n  as?: E;\n};\n\nexport type TextEditorProps<E extends ElementType> = TextEditorOwnProps<E> &\n  Omit<ComponentProps<E>, keyof TextEditorOwnProps<E>>;\n\nexport const TextEditor = <E extends ElementType = \"div\">({\n  as,\n  onFocus,\n  onBlur,\n  defaultValue = \"\",\n  placeholder = \"Enter Here\",\n  ...props\n}: TextEditorProps<E>) => {\n  let editorRef = useRef<HTMLDivElement>(null);\n  let toolBarRef = useRef<HTMLUListElement>(null);\n\n  const handleFocus = (event: FocusEvent<HTMLDivElement>): void => {\n    editorRef.current?.classList.remove(styles.blur);\n    editorRef.current?.classList.add(styles.focus);\n    toolBarRef.current?.classList.add(styles.show);\n    if (typeof onFocus === \"function\") onFocus(event);\n  };\n\n  const handleBlur = (event: FocusEvent<HTMLDivElement>): void => {\n    editorRef.current?.classList.remove(styles.focus);\n    editorRef.current?.classList.add(styles.blur);\n    toolBarRef.current?.classList.remove(styles.show);\n    if (typeof onBlur === \"function\") onBlur(event);\n  };\n\n  const Component = as || \"div\";\n  return (\n    <div className={styles.container}>\n      <Component\n        ref={editorRef}\n        className={styles.editor}\n        contentEditable={true}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        placeholder={placeholder}\n        dangerouslySetInnerHTML={{ __html: defaultValue }}\n        {...props}\n      />\n      <ul ref={toolBarRef} className={styles.toolbar}>\n        <li>\n          <i className=\"bx-bold\"></i>\n        </li>\n        <li>\n          <i className=\"bx-italic\"></i>\n        </li>\n        <li>\n          <i className=\"bx-underline\"></i>\n        </li>\n        <li>\n          <i className=\"bx-link-alt\"></i>\n        </li>\n        <li>\n          <i className=\"bx-strikethrough\"></i>\n        </li>\n        <li>\n          <i className=\"bx-eraser\"></i>\n        </li>\n        <li>\n          <i className=\"bx-undo\"></i>\n        </li>\n        <li>\n          <i className=\"bx-redo\"></i>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { ReactNode } from \"react\";\n\nimport styles from \"./ToolTip.module.scss\";\n\ntype ToolTipProps = {\n  children: ReactNode;\n};\n\nexport const ToolTip = ({ children }: ToolTipProps) => {\n  return (\n    <div>\n      <span>ToolTip</span>\n    </div>\n  );\n};\n","import { ReactNode } from \"react\";\n\ntype CookieSetter<T> = {\n  name: string;\n  value: T;\n  days: number;\n};\n\nexport const cookies = () => {\n  const set = <T,>({ name, value, days }: CookieSetter<T>): void => {\n    let expireDate = new Date();\n    expireDate.setTime(expireDate.getTime() + days * 24 * 60 * 60 * 1000);\n    let expires = \"; expires=\" + expireDate.toUTCString();\n    document.cookie = name + \"=\" + JSON.stringify(value) + expires + \"; path=/\";\n  };\n\n  const get = (name: string): string | null => {\n    let match = document.cookie.match(new RegExp(\"(^| )\" + name + \"=([^;]+)\"));\n\n    return match ? match[2] : null;\n  };\n\n  const remove = (name: string): void => {\n    document.cookie =\n      name + \"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  };\n\n  return {\n    set,\n    get,\n    remove,\n  };\n};\n\nexport const clickOutside = ({\n  ref,\n  onClose,\n  doNotClose = () => false,\n}: {\n  ref: HTMLElement;\n  onClose: () => void;\n  doNotClose: (element: HTMLElement) => boolean;\n}) => {\n  if (!ref) return;\n\n  const handleClickOutside = (event: MouseEvent) => {\n    let { target } = event;\n    if (\n      ref.contains(target as HTMLElement) ||\n      doNotClose(target as HTMLElement)\n    )\n      return;\n    onClose();\n    document.removeEventListener(\"click\", handleClickOutside);\n  };\n\n  document.addEventListener(\"click\", handleClickOutside);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"DatePicker_field__G4l7h\"};","// extracted by mini-css-extract-plugin\nexport default {\"enter\":\"DropDown_enter__uSEE3\",\"menu\":\"DropDown_menu__3cGdI\",\"exit\":\"DropDown_exit__8wUc0\",\"left\":\"DropDown_left__GqnVO\",\"right\":\"DropDown_right__58P-d\",\"top\":\"DropDown_top__9AW9N\",\"bottom\":\"DropDown_bottom__iuD9Z\",\"container\":\"DropDown_container__uTfyj\",\"item\":\"DropDown_item__TyAwV\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"FormCard_card__P-zeb\",\"wrapper\":\"FormCard_wrapper__1W3lh\",\"field\":\"FormCard_field__N7R-0\",\"footer\":\"FormCard_footer__jtUlK\",\"split\":\"FormCard_split__cr5mX\",\"more_options\":\"FormCard_more_options__9Rxmj\",\"option_drop_down\":\"FormCard_option_drop_down__ycPlU\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MultiOptionField_container__wP3w7\",\"option_field\":\"MultiOptionField_option_field__HaSS4\",\"wrapper\":\"MultiOptionField_wrapper__4zpnc\",\"add_option\":\"MultiOptionField_add_option__+eCB7\",\"other_option\":\"MultiOptionField_other_option__hzAnu\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TypeDropDown_wrapper__gvVT+\",\"option\":\"TypeDropDown_option__+SeIz\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FormWrapper_container__HGEdK\",\"drag_icon\":\"FormWrapper_drag_icon__adVOi\",\"highlight\":\"FormWrapper_highlight__C-M7T\",\"indicator\":\"FormWrapper_indicator__GYW-G\"};","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Input_field__zyOC5\",\"focus\":\"Input_focus__S3RR1\",\"showLine\":\"Input_showLine__gEPU2\",\"blur\":\"Input_blur__KvclT\",\"hideLine\":\"Input_hideLine__kYgaM\"};","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"TextArea_field__vyrT9\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TextEditor_container__h22UI\",\"toolbar\":\"TextEditor_toolbar__+ZQU1\",\"show\":\"TextEditor_show__4NjZR\",\"editor\":\"TextEditor_editor__He3tt\",\"focus\":\"TextEditor_focus__W6420\",\"showLine\":\"TextEditor_showLine__zx29e\",\"blur\":\"TextEditor_blur__Jaf7K\",\"hideLine\":\"TextEditor_hideLine__FT7SY\"};"],"names":["CheckBox","onChange","DatePicker","placeholder","props","className","styles","type","DropDownContext","createContext","DropDown","selector","children","isOpen","size","toggle","useState","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","placement","modifiers","name","options","offset","attributes","style","state","show","setShow","open","close","useEffect","length","element","document","querySelector","onclick","createPortal","in","timeout","unmountOnExit","classNames","enterActive","exitActive","onEntered","clickOutside","ref","onClose","doNotClose","event","contains","Provider","value","trim","popper","width","rects","reference","body","Item","onClick","useContext","MutiOptionField","readOnly","id","description","question","other","icon","validation","useMemo","map","option","index","Input","defaultValue","TypeDropDown","selectedOption","handleChange","Fragment","label","formDropDown","FormCard","selectedId","handleClickForm","field","find","component","disabled","TextArea","FormWrapper","isSelected","TextEditor","as","isHeader","onFocus","onBlur","inputRef","useRef","current","classList","remove","add","Radio","editorRef","toolBarRef","Component","contentEditable","dangerouslySetInnerHTML","__html","ToolTip","cookies","set","days","expireDate","Date","setTime","getTime","expires","toUTCString","cookie","JSON","stringify","get","match","RegExp","addEventListener","handleClickOutside","target","removeEventListener"],"sourceRoot":""}