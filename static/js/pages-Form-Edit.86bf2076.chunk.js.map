{"version":3,"file":"static/js/pages-Form-Edit.86bf2076.chunk.js","mappings":"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","sources":["components/Box/index.tsx","components/CheckBox/index.tsx","components/DatePicker/index.tsx","components/DropDown/index.tsx","components/Input/index.tsx","components/Radio/index.tsx","components/TextEditor/index.tsx","components/ToolTip/index.tsx","helpers/index.tsx","pages/Form/Edit/FormField/TypeDropDown/index.tsx","pages/Form/Edit/FormField/index.tsx","pages/Form/Edit/index.tsx","webpack://react-google-form/./src/components/Box/Box.module.scss?20ba","webpack://react-google-form/./src/components/DropDown/DropDown.module.scss?3f20","webpack://react-google-form/./src/components/TextEditor/TextEditor.module.scss?31d3","webpack://react-google-form/./src/pages/Form/Edit/FormField/FormField.module.scss?8ec3","webpack://react-google-form/./src/pages/Form/Edit/FormField/TypeDropDown/TypeDropDown.module.scss?4587"],"sourcesContent":["import { ComponentProps, ReactNode } from \"react\";\n\nimport styles from \"./Box.module.scss\";\n\ntype BoxProps = {\n  isSelected?: boolean;\n  isHeader?: boolean;\n  children: ReactNode;\n} & ComponentProps<\"div\">;\n\nexport const Box = ({\n  children,\n  isHeader = false,\n  isSelected = false,\n  className,\n  ...props\n}: BoxProps) => {\n  return (\n    <div\n      {...(isHeader && { \"aria-label\": \"header\" })}\n      className={`${styles.container} ${className || \"\"}`.trim()}\n      {...props}\n    >\n      {!isHeader && (\n        <div className={styles.drag_icon}>\n          <i className=\"bx-dots-horizontal-rounded\"></i>\n          <i className=\"bx-dots-horizontal-rounded\"></i>\n        </div>\n      )}\n      {children}\n      {isHeader && <div className={styles.indicator}></div>}\n      {isSelected && <div className={styles.highlight}></div>}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport styles from \"./CheckBox.module.scss\";\n\ntype CheckBoxProps = {\n  onChange?: () => void;\n};\n\nexport const CheckBox = ({ onChange = () => {} }: CheckBoxProps) => {\n  return (\n    <div>\n      <span>CheckBox</span>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport styles from \"./DatePicker.module.scss\";\n\ntype DatePickerProps = {\n  onChange?: () => void;\n};\n\nexport const DatePicker = ({ onChange = () => {} }: DatePickerProps) => {\n  return (\n    <div>\n      <span>DatePicker</span>\n    </div>\n  );\n};\n","import {\n  ReactNode,\n  useEffect,\n  useState,\n  createContext,\n  useContext,\n  ComponentProps,\n} from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { createPortal } from \"react-dom\";\nimport { usePopper, Popper } from \"react-popper\";\nimport { clickOutside } from \"helpers\";\n\nimport styles from \"./DropDown.module.scss\";\n\ntype DropDownProps = {\n  selector: string;\n  children?: ReactNode;\n  isOpen?: boolean;\n  toggle?: () => void;\n  zIndex?: number;\n};\n\ntype DropDownContextType = {\n  close: () => void;\n};\n\nconst DropDownContext = createContext<DropDownContextType | null>(null);\n\nexport const DropDown = ({\n  selector,\n  children,\n  isOpen,\n  toggle = () => {},\n}: DropDownProps) => {\n  let [referenceElement, setReferenceElement] = useState<HTMLElement | null>(\n    null\n  );\n  let [popperElement, setPopperElement] = useState<HTMLElement | null>(null);\n\n  const {\n    attributes,\n    styles: style,\n    state,\n  } = usePopper(referenceElement, popperElement, {\n    placement: \"bottom-start\",\n    modifiers: [\n      {\n        name: \"offset\",\n        options: {\n          offset: [0, 10],\n        },\n      },\n    ],\n  });\n\n  const [show, setShow] = useState(false);\n\n  const open = () => {\n    setShow(true);\n  };\n\n  const close = () => {\n    setShow(false);\n  };\n\n  useEffect(() => {\n    if (selector.length === 0) return;\n\n    const element = document.querySelector(selector) as HTMLElement;\n\n    if (!element) return;\n\n    element.onclick = typeof isOpen === \"boolean\" ? toggle : open;\n\n    setReferenceElement(element);\n  }, []);\n\n  const onEntered = (element: HTMLElement) => {\n    if (!element) return;\n\n    clickOutside({\n      ref: element,\n      onClose: typeof isOpen === \"boolean\" ? toggle : close,\n      doNotClose: (event) => {\n        if (!referenceElement) return false;\n        return referenceElement.contains(event);\n      },\n    });\n  };\n\n  return createPortal(\n    <CSSTransition\n      in={typeof isOpen === \"boolean\" ? isOpen : show}\n      timeout={200}\n      unmountOnExit\n      classNames={{\n        enterActive: styles.enter,\n        exitActive: styles.exit,\n      }}\n      onEntered={onEntered}\n    >\n      <DropDownContext.Provider\n        value={{ close: typeof isOpen === \"boolean\" ? toggle : close }}\n      >\n        <div\n          ref={setPopperElement}\n          className={styles.container}\n          style={{ ...style.popper, width: state?.rects?.reference?.width }}\n          {...attributes.popper}\n        >\n          <div className={styles.menu}>{children}</div>\n        </div>\n      </DropDownContext.Provider>\n    </CSSTransition>,\n    document.body\n  );\n};\n\ntype DropDownItemProps = {\n  children?: ReactNode;\n  onClick?: () => void;\n  className?: string;\n} & ComponentProps<\"button\">;\n\nexport const Item = ({\n  children,\n  onClick,\n  className,\n  ...props\n}: DropDownItemProps) => {\n  const { close } = useContext(DropDownContext) as DropDownContextType;\n\n  const handleClick = () => {\n    close();\n    if (typeof onClick === \"function\") onClick();\n  };\n\n  return (\n    <button\n      className={`${styles.item} ${className ? className : \"\"}`.trim()}\n      onClick={handleClick}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nDropDown.Item = Item;\n","import React from \"react\";\n\nimport styles from \"./Input.module.scss\";\n\ntype InputProps = {\n  onChange?: () => void;\n};\n\nexport const Input = ({ onChange = () => {} }: InputProps) => {\n  return (\n    <div>\n      <span>Input</span>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport styles from \"./Radio.module.scss\";\n\ntype RadioProps = {\n  onChange?: () => void;\n};\n\nexport const Radio = ({ onChange = () => {} }: RadioProps) => {\n  return (\n    <div>\n      <span>Radio</span>\n    </div>\n  );\n};\n","import { FocusEvent, ElementType, useRef, ComponentProps } from \"react\";\n\nimport styles from \"./TextEditor.module.scss\";\n\ntype TextEditorOwnProps<E extends ElementType> = {\n  as?: E;\n};\n\nexport type TextEditorProps<E extends ElementType> = TextEditorOwnProps<E> &\n  Omit<ComponentProps<E>, keyof TextEditorOwnProps<E>>;\n\nexport const TextEditor = <E extends ElementType = \"div\">({\n  as,\n  onFocus,\n  onBlur,\n  defaultValue = \"\",\n  placeholder = \"Enter Here\",\n  ...props\n}: TextEditorProps<E>) => {\n  let editorRef = useRef<HTMLDivElement>(null);\n  let toolBarRef = useRef<HTMLUListElement>(null);\n\n  const handleFocus = (event: FocusEvent<HTMLDivElement>): void => {\n    editorRef.current?.classList.remove(styles.blur);\n    editorRef.current?.classList.add(styles.focus);\n    toolBarRef.current?.classList.add(styles.show);\n    if (typeof onFocus === \"function\") onFocus(event);\n  };\n\n  const handleBlur = (event: FocusEvent<HTMLDivElement>): void => {\n    editorRef.current?.classList.remove(styles.focus);\n    editorRef.current?.classList.add(styles.blur);\n    toolBarRef.current?.classList.remove(styles.show);\n    if (typeof onBlur === \"function\") onBlur(event);\n  };\n\n  const Component = as || \"div\";\n  return (\n    <div className={styles.container}>\n      <Component\n        ref={editorRef}\n        className={styles.editor}\n        contentEditable={true}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        placeholder={placeholder}\n        dangerouslySetInnerHTML={{ __html: defaultValue }}\n        {...props}\n      />\n      <ul ref={toolBarRef} className={styles.toolbar}>\n        <li>\n          <i className=\"bx-bold\"></i>\n        </li>\n        <li>\n          <i className=\"bx-italic\"></i>\n        </li>\n        <li>\n          <i className=\"bx-underline\"></i>\n        </li>\n        <li>\n          <i className=\"bx-link-alt\"></i>\n        </li>\n        <li>\n          <i className=\"bx-strikethrough\"></i>\n        </li>\n        <li>\n          <i className=\"bx-eraser\"></i>\n        </li>\n        <li>\n          <i className=\"bx-undo\"></i>\n        </li>\n        <li>\n          <i className=\"bx-redo\"></i>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { ReactNode } from \"react\";\n\nimport styles from \"./ToolTip.module.scss\";\n\ntype ToolTipProps = {\n  children: ReactNode;\n};\n\nexport const ToolTip = ({ children }: ToolTipProps) => {\n  return (\n    <div>\n      <span>ToolTip</span>\n    </div>\n  );\n};\n","import { ReactNode } from \"react\";\n\ntype CookieSetter<T> = {\n  name: string;\n  value: T;\n  days: number;\n};\n\nexport const cookies = () => {\n  const set = <T,>({ name, value, days }: CookieSetter<T>): void => {\n    let expireDate = new Date();\n    expireDate.setTime(expireDate.getTime() + days * 24 * 60 * 60 * 1000);\n    let expires = \"; expires=\" + expireDate.toUTCString();\n    document.cookie = name + \"=\" + JSON.stringify(value) + expires + \"; path=/\";\n  };\n\n  const get = (name: string): string | null => {\n    let match = document.cookie.match(new RegExp(\"(^| )\" + name + \"=([^;]+)\"));\n\n    return match ? match[2] : null;\n  };\n\n  const remove = (name: string): void => {\n    document.cookie =\n      name + \"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  };\n\n  return {\n    set,\n    get,\n    remove,\n  };\n};\n\nexport const clickOutside = ({\n  ref,\n  onClose,\n  doNotClose = () => false,\n}: {\n  ref: HTMLElement;\n  onClose: () => void;\n  doNotClose: (element: HTMLElement) => boolean;\n}) => {\n  if (!ref) return;\n\n  const handleClickOutside = (event: MouseEvent) => {\n    let { target } = event;\n    if (\n      ref.contains(target as HTMLElement) ||\n      doNotClose(target as HTMLElement)\n    )\n      return;\n    onClose();\n    document.removeEventListener(\"click\", handleClickOutside);\n  };\n\n  document.addEventListener(\"click\", handleClickOutside);\n};\n","import { Fragment } from \"react\";\nimport { DropDown } from \"components/DropDown\";\nimport { FormContextType, FormOption, FormType } from \"types/Form\";\n\nimport styles from \"./TypeDropDown.module.scss\";\n\ntype OptionsProps = {\n  id: string;\n  type: string;\n  options: FormOption[];\n  selectedOption: FormOption | undefined;\n} & Pick<FormContextType, \"handleChange\">;\n\nexport const TypeDropDown = ({\n  id,\n  options,\n  selectedOption,\n  handleChange,\n}: OptionsProps) => {\n  return (\n    <Fragment>\n      <div id={`option-${id}`} className={styles.wrapper}>\n        <div className={styles.option}>\n          <i className={selectedOption?.icon}></i>\n          <span>{selectedOption?.label}</span>\n        </div>\n        <i className=\"bxs-down-arrow\"></i>\n      </div>\n      <DropDown selector={`#option-${id}`}>\n        {options.map((option) => {\n          return (\n            <DropDown.Item\n              key={`${option.label}-${id}`}\n              onClick={() => handleChange(\"type\", id, option.type)}\n            >\n              <i className={option.icon}></i>\n              <span>{option.label}</span>\n            </DropDown.Item>\n          );\n        })}\n      </DropDown>\n    </Fragment>\n  );\n};\n","import { ReactNode, useMemo } from \"react\";\nimport { TypeDropDown } from \"./TypeDropDown\";\nimport { FormOption, Field, FormType, FormContextType } from \"types/Form\";\nimport { TextEditor, Box } from \"components\";\n\nimport styles from \"./FormField.module.scss\";\n\ntype FormFieldProps = {\n  selectedId: string | null;\n  handleClickForm: (id: string) => void;\n} & Pick<FormContextType, \"handleChange\"> &\n  Field;\n\nlet formOptions: FormOption[] = [\n  { type: \"input\", icon: \"bx-text\", label: \"Short answer\" },\n  { type: \"textarea\", icon: \"bx-paragraph\", label: \"Paragraph\" },\n  { type: \"checkbox\", icon: \"bx-checkbox-checked\", label: \"Checkboxes\" },\n  {\n    type: \"radio\",\n    icon: \"bx-radio-circle-marked\",\n    label: \"Multiple Choices\",\n  },\n  { type: \"dropdown\", icon: \"bx-down-arrow-circle\", label: \"Dropdown\" },\n  { type: \"date\", icon: \"bx-calendar\", label: \"Date\" },\n  { type: \"file\", icon: \"bx-cloud-upload\", label: \"File Upload\" },\n];\n\nconst CheckBox = () => {\n  return (\n    <div>\n      <span>Checkbox</span>\n    </div>\n  );\n};\n\nconst Radio = () => {\n  return (\n    <div>\n      <span>Radio</span>\n    </div>\n  );\n};\n\nconst Paragraph = () => {\n  return (\n    <div>\n      <span>Paragraph</span>\n    </div>\n  );\n};\n\nconst ShortText = () => {\n  return (\n    <div>\n      <span>Text</span>\n    </div>\n  );\n};\n\nconst Date = () => {\n  return (\n    <div>\n      <span>Date</span>\n    </div>\n  );\n};\n\nconst File = () => {\n  return (\n    <div>\n      <span>File</span>\n    </div>\n  );\n};\n\nconst DropDown = () => {\n  return (\n    <div>\n      <span>DropDown</span>\n    </div>\n  );\n};\n\nexport const FormField = ({\n  id,\n  type,\n  description,\n  label,\n  options,\n  validation,\n  value,\n  selectedId,\n  handleClickForm,\n  handleChange,\n}: FormFieldProps) => {\n  let selectedOption = useMemo<FormOption | undefined>(() => {\n    return formOptions.find((option) => {\n      return option.type === type;\n    });\n  }, [type]);\n\n  let component = useMemo<ReactNode>(() => {\n    switch (type) {\n      case \"checkbox\":\n        return <CheckBox />;\n      case \"date\":\n        return <Date />;\n      case \"dropdown\":\n        return <DropDown />;\n      case \"file\":\n        return <File />;\n      case \"input\":\n        return <ShortText />;\n      case \"radio\":\n        return <Radio />;\n      case \"textarea\":\n        return <Paragraph />;\n      default:\n        return null;\n    }\n  }, [type]);\n\n  return (\n    <Box\n      className={styles.card}\n      onClick={() => handleClickForm(id)}\n      isSelected={selectedId === id}\n    >\n      <div className={styles.wrapper}>\n        <TextEditor as=\"div\" placeholder=\"Question\" />\n        {selectedId === id && (\n          <TypeDropDown\n            id={id}\n            type={type}\n            handleChange={handleChange}\n            options={formOptions}\n            selectedOption={selectedOption}\n          />\n        )}\n      </div>\n      {component}\n    </Box>\n  );\n};\n","import { Fragment } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { FormContextType } from \"types/Form\";\n\nimport { FormField } from \"./FormField\";\n\nimport styles from \"./Edit.module.scss\";\n\nconst EditForm = () => {\n  const {\n    formDetail: { theme, fields },\n    selectedId,\n    handleClickForm,\n    handleChange,\n  } = useOutletContext<FormContextType>();\n\n  return (\n    <Fragment>\n      {fields.map((field) => {\n        return (\n          <FormField\n            key={field.id}\n            selectedId={selectedId}\n            handleClickForm={handleClickForm}\n            handleChange={handleChange}\n            {...field}\n          />\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default EditForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Box_container__x9pmm\",\"drag_icon\":\"Box_drag_icon__WTK-7\",\"highlight\":\"Box_highlight__z7Ao7\",\"indicator\":\"Box_indicator__6T9A3\"};","// extracted by mini-css-extract-plugin\nexport default {\"enter\":\"DropDown_enter__uSEE3\",\"menu\":\"DropDown_menu__3cGdI\",\"exit\":\"DropDown_exit__8wUc0\",\"left\":\"DropDown_left__GqnVO\",\"right\":\"DropDown_right__58P-d\",\"top\":\"DropDown_top__9AW9N\",\"bottom\":\"DropDown_bottom__iuD9Z\",\"container\":\"DropDown_container__uTfyj\",\"item\":\"DropDown_item__TyAwV\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TextEditor_container__h22UI\",\"toolbar\":\"TextEditor_toolbar__+ZQU1\",\"show\":\"TextEditor_show__4NjZR\",\"editor\":\"TextEditor_editor__He3tt\",\"focus\":\"TextEditor_focus__W6420\",\"showLine\":\"TextEditor_showLine__zx29e\",\"blur\":\"TextEditor_blur__Jaf7K\",\"hideLine\":\"TextEditor_hideLine__FT7SY\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"FormField_card__S3QII\",\"wrapper\":\"FormField_wrapper__MWelj\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TypeDropDown_wrapper__OAoOG\",\"option\":\"TypeDropDown_option__vNSit\"};"],"names":["Box","children","isHeader","isSelected","className","props","styles","trim","CheckBox","onChange","DatePicker","DropDownContext","createContext","DropDown","selector","isOpen","toggle","useState","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","placement","modifiers","name","options","offset","attributes","style","state","show","setShow","open","close","useEffect","length","element","document","querySelector","onclick","createPortal","in","timeout","unmountOnExit","classNames","enterActive","exitActive","onEntered","clickOutside","ref","onClose","doNotClose","event","contains","Provider","value","popper","width","rects","reference","body","Item","onClick","useContext","Input","Radio","TextEditor","as","onFocus","onBlur","defaultValue","placeholder","editorRef","useRef","toolBarRef","Component","contentEditable","current","classList","remove","add","dangerouslySetInnerHTML","__html","ToolTip","cookies","set","days","expireDate","Date","setTime","getTime","expires","toUTCString","cookie","JSON","stringify","get","match","RegExp","addEventListener","handleClickOutside","target","removeEventListener","TypeDropDown","id","selectedOption","handleChange","Fragment","icon","label","map","option","type","formOptions","Paragraph","ShortText","File","FormField","selectedId","description","validation","handleClickForm","useMemo","find","component","useOutletContext","formDetail","fields","theme","field"],"sourceRoot":""}